{#
/**
 * @file bootstrap_5_layout_mod.html.twig
 * Modificación al layout bootstrap
 ^ Añadimos atributos a etiquetas del formulario html
 * para mostrar una descripción obtenida de la base de datos
 * mediante XHR
 */
#}
{#{% use '@Dashboard/symfony/bootstrap_3_layout.html.twig' %}#}
{% use 'bootstrap_5_layout.html.twig' %}

{#{% block form_help -%}#}
{#    {% set help= 'Tómate algo' %}#}
{#    {{- parent() -}}#}
{#{%- endblock form_help %}#}

{#
En FormType añadimos el  atributo  "field_id" a elementos del formulario
Se corresponde con el ID en la tabla Fielddefinition.
Mediante la extensión twig "get_field_definition_json_by_id()" obtenemos los datos de caché.
Retornamos un array conforme a la especificación JSON:API
@see https://www.uisic.uis-speleo.org/exchange/atendefn.html UIS Cave and Karst Field Definitions
#}
{% block form_label -%}

{% if attr.field_id is defined and attr.field_id %}
    {%- set translation_domain= false -%}
    {%- set fieldefinition_JSON_API = get_field_definition_json_by_id(attr.field_id,app.request.locale) -%}
    {%- set fielddefinition = fieldefinition_JSON_API is iterable ? fieldefinition_JSON_API.data.attributes : null -%}

    {# texto de label adaptado al locale en sesión #}
    {% if fielddefinition %}
        {% set label= fielddefinition.name %}

        {# Cambiamos el título de label adaptado al locale en sesión #}
        {%- set label_attr = label_attr|default({})|merge({
            'title': attr.field_id ~' - ' ~fielddefinition.name
        }) -%}

        {{- parent() -}}
        {# Popover para mostrar el resto de attributos #}
        {% include '@fd_popover/field_definiton_popover_tag.html.twig' with {
            'id': attr.field_id , 'name': null, 'title': attr.field_id~' - '~fielddefinition.name
        } only %}
    {% endif %}
{% else %}
    {{- parent() -}}
{%-endif-%}


{# Resaltar campos obligatorios #}
{%if required== true and label%}
    <i class="fa fa-xs fa-asterisk" title="{{ 'field.required'|trans({},'cavemessages')|raw }}" style="display: inline-block" ></i>
{%endif%}

{#     Elemento oculto para errores del campo utilizando un script que muestre un popover#}
    <a class="js-error js-error-id-{{ id }}"
       style="display: none;"
       data-id="{{ id }}"
       data-toggle="popover"
       data-bs-html="true"
       data-bs-trigger="hover focus manual"
       data-bs-title="<span class='text-danger'>{{ fielddefinition.name ?? name }}</span>"
       title="{{ fielddefinition.name ?? name }}"
       data-bs-content="{%- if errors  -%}
           <ul class='list-unstyled'>
           {% for error in errors %}
                {{ error.message }}
           {% endfor %}
           </ul>
            {%- endif -%}">
        <i class="fa fa-exclamation-triangle color-danger"></i></a>
{%- endblock form_label %}


{# Elemento oculto para errores para checkdbox/radio#}
{# todo: se puede eliminar repetición? No lo encontré #}
{% block checkbox_radio_label -%}
    {#- Do not display the label if widget is not defined in order to prevent double label rendering -#}
    {%- if widget is defined -%}
        {{ parent() }}

        <a class="js-error js-error-id-{{ id }}"
               style="display: none;"
               data-id="{{ id }}"
               data-bs-toggle="popover"
               data-bs-html="true"
               data-bs-trigger="hover focus"
               data-bs-title="<span class='text-danger'>{{ fielddefinition.name ?? name }}</span>"
               title="{{ fielddefinition.name ?? name }}"
               data-bs-content="{%- if errors  -%}
                   <ul class='list-unstyled'>
                   {% for error in errors %}
                        {{ error.message }}
                   {% endfor %}
                   </ul>
                    {%- endif -%}">
                    <i class="fa fa-exclamation-triangle color-danger"></i>
        </a>
    {% endif %}
{% endblock %}



{% block checkbox_widget %}
{%- set fieldefinition_JSON_API = get_field_definition_json_by_id(attr.field_id,app.request.locale) -%}
{%- set fielddefinition = fieldefinition_JSON_API is iterable ? fieldefinition_JSON_API.data.attributes : null -%}

{% if attr.field_id is defined and attr.field_id%}

        {% if fielddefinition %}

        <div class="checkbox">
            <label>
                <input type="checkbox"
                        {{ block('widget_attributes') }}
                        {% if value is defined %}
                            value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %}
                />
                {{ fielddefinition.name }}
                &nbsp;{% include '@fd_popover/field_definiton_popover_tag.html.twig' with {'id': attr.field_id , 'name': fielddefinition.name, 'title': attr.field_id~' - '~fielddefinition.name} only %}
            </label>
        </div>
            {{- parent() -}}
        {%else%}

        {{- parent() -}}

        {%-endif-%}

{%else%}

    {{- parent() -}}

{%-endif-%}

{% endblock checkbox_widget %}



{% block file_widget -%}

    {%- set type = type|default('file') -%}
    {%- set input_lang = 'en' -%}
    {%- set translation_domain = translation_domain is same as(null) ? 'cavemessages' : translation_domain-%}

    {%- if attr.placeholder is not defined-%}
        {%- set attr = {placeholder: 'btn.file'} | merge(attr) -%}
    {%- endif -%}

    {% if app is defined and app.request is defined %}
        {%- set input_lang = app.request.locale -%}
    {%- endif -%}

    {%- set attr = {lang: input_lang, class: ''} | merge(attr) -%}
    {%- set label_attr = label_attr|merge({ class: (label_attr.class|default('') ~ ' input-group-text bg-secondary text-gray-100')|trim })|filter((value, key) => key != 'id') -%}
    <div class="input-group">
    <label for="{{ form.vars.id }}" {% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}>
        <i class="fa fa-cloud-upload"></i>&nbsp;

        {%- if attr.placeholder is defined and attr.placeholder is not none -%}
            {{- translation_domain is same as(false) ? attr.placeholder : attr.placeholder|trans({}, translation_domain) -}}
        {%- endif -%}

    </label>
    {{- block('form_widget_simple') -}}
    </div>
{% endblock %}


{% block form_widget_simple -%}

    {%- if type is not defined or type != 'hidden' -%}
        {%- set className = ' form-control' -%}
        {%- if type|default('') == 'file' -%}
            {%- set className = 'js-bsfileinput' -%}
        {%- elseif type|default('') == 'range' -%}
            {%- set className = ' form-control-range' -%}
        {%- endif -%}
        {%- set attr = attr|merge({class: (attr.class|default('') ~ className)|trim}) -%}
    {%- endif -%}

    {%- if type is defined and (type == 'range' or type == 'color') %}
        {# Attribute "required" is not supported #}
        {%- set required = false -%}
    {% endif %}

    {{- parent() -}}

{%- endblock form_widget_simple %}